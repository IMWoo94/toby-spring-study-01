<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xis="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xis:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/tobyspring?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Seoul"/>
        <property name="username" value="toby"/>
        <property name="password" value="spring"/>
    </bean>

    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"></property>
        <property name="sqlService" ref="sqlService"></property>
    </bean>

    <bean id="sqlService" class="springbook.user.sqlservice.OxmSqlService">
        <property name="unmarshaller" ref="unmarshaller"></property>
        <property name="sqlmap" value="classpath:../../test/resources/sqlmap.xml"></property>
    </bean>
    <bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="springbook.user.sqlservice.jaxb"></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="mailSender" class="springbook.user.service.MockMailSender">
        <!--        <property name="host" value="mail.sever.com"></property>-->
    </bean>

    <bean id="userService" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
        <property name="mailSender" ref="mailSender"></property>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserServiceImpl"
          parent="userService"/>


    <!--    <bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">-->
    <!--        <property name="transactionManager" ref="transactionManager"></property>-->
    <!--    </bean>-->
    <!--    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
    <!--        <property name="transactionManager" ref="transactionManager"></property>-->
    <!--        <property name="transactionAttributes">-->
    <!--            <props>-->
    <!--                <prop key="get*">PROPAGATION_REQUIRED,readOnly, timeout-30</prop>-->
    <!--                <prop key="upgrade*">PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE</prop>-->
    <!--                <prop key="*">PROPAGATION_REQUIRED</prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--    </bean>-->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--    <bean id="transactionPointcut" class="springbook.user.service.NameMatchClassMethodPointcut">-->
    <!--        <property name="mappedClassName" value="*ServiceImpl"></property>-->
    <!--        <property name="mappedName" value="upgrade*"></property>-->
    <!--    </bean>-->
    <!--    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">-->
    <!--        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"></property>-->
    <!--    </bean>-->
    <!--    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">-->
    <!--        <property name="advice" ref="transactionAdvice"></property>-->
    <!--        <property name="pointcut" ref="transactionPointcut"></property>-->
    <!--    </bean>-->
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="bean(*Service)"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"></aop:advisor>
    </aop:config>

    <context:annotation-config/>

</beans>
